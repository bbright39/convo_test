#include<stdio.h>
#include<stdlib.h>
int main()
{

	FILE *fp;
	char s2[10];
	char row_att[500],s1[700];
	int i=0,j=0;
	int num_row=0,num_col=60;

	///// get num row ///////////////////////////
	fp = fopen("../../BCI_word/train_split/test.csv","r");
	//fp = fopen("../../BCI_word/train_split/S02_Sess01_FB001.csv","r");
	if (fp == NULL) {
		printf("Error");
	}

	char c;
	for (c = getc(fp); c != EOF; c = getc(fp))
		if (c == '\n') // Increment count if this character is newline
			num_row++;
	printf("num of row : %d\n",num_row);
	fclose(fp);
	///// ///////////////////////////////////////

	fp = fopen("../../BCI_word/train_split/test.csv","r");
	//fp = fopen("../../BCI_word/train_split/S02_Sess01_FB001.csv","r");
	if (fp == NULL) {
		printf("Error");
	}


	double *x[5];
	x[0] = (double*)calloc(num_col*num_row,sizeof(double));
	double *y[56];
	for(j=0;j<56;j++)
	{
		y[0] = (double*)calloc(num_col,sizeof(double));
	}
	double h[28] = {0.0097362440085623485,0.013687152003616806,0.0086598566942656593,0.010107906049923423,0.011567164460922022,0.013001162923617181,0.014388273966865671,0.015685605866716749,0.016856816862759815,0.017894187091944333,0.018757543865330663,0.019421678991148002,0.019876744992742834,0.020110283590889164,0.020110283590889164,0.019876744992742834,0.019421678991148002,0.018757543865330663,0.017894187091944333,0.016856816862759815,0.015685605866716749,0.014388273966865671,0.013001162923617181,0.011567164460922022,0.010107906049923423,0.0086598566942656593,0.013687152003616806,0.0097362440085623485};
	printf("h[0] : %lf\nh[27] : %lf\n",h[0],h[27]);

	/* read attribute */
	fscanf(fp,"%s",row_att);
	printf("row_att : %s\n",row_att);

	fscanf(fp,"%[^,],",s2);
	printf("ans s[0]: %s\n",s2);
	for(i=1;i<(num_row-1)*num_col;i++)
	{
		if((i%num_col) == 0)
		{
			fscanf(fp,"%[^,],",s2);
			printf("ans s[0]: %s\n",s2);
		}else
		{
			fscanf(fp,"%lf,",&x[0][i]);
			printf("i: %d || x[0][%d] : %lf\n",i,i,x[0][i]);
		}
		//printf("i: %d || x[0][%d] : %lf\n",i,i,x[0][i]);
		/*
		if(i<125)
		{
		if(i%num_col == 0 && i !=0)
		{
		printf("i : %d || :x[0][%d] : %lf\n",i-2,i-2,x[0][i-2]);
		printf("i : %d || :x[0][%d] : %lf\n",i-1,i-1,x[0][i-1]);
		printf("i : %d || :x[0][%d] : %lf\n",i,i,x[0][i]);
		}
		}
		*/
		/*
		if((i%100000==0)&&(i!=0))
		{
		printf("i : %d\n",i);
		printf("i-2: %d || x[0][%d] : %lf\n",i-2,i-2,x[0][i-2]);
		printf("i-1: %d || x[0][%d] : %lf\n",i-1,i-1,x[0][i-1]);
		printf("i  : %d || x[0][%d] : %lf\n",i,i,x[0][i]);
		}*/
	}
	/*
	printf("x[0][57] : %lf\n",x[0][57]);
	printf("x[0][58] : %lf\n",x[0][58]);
	printf("x[0][59] : %lf\n",x[0][59]);

	printf("x[0][1000] : %lf\n",x[0][(num_row-1)*num_col-1]);
	*/
	free(x[0]);
	fclose(fp);
	getchar();
	return 0;
}






//char s1[4]
/*fscanf(fp,"%s",&s1);
printf("s1 : %s\n",s1);
char *pt;
char* buffer;
buffer=strtok(s1,",");
while(buffer)
{
printf ("%s\n", buffer);          // process token
buffer = strtok (NULL, ",");
while (buffer)
buffer++;
}
*/
/*
pt = strtod(s1,&pt);
while(pt != NULL)
{
val = strtod(s1,&pt);
printf("val: %lf \n",val);
}*/
/*
for(j=0;j<5;j++)
{
//fscanf(fp,"%[^,]d",&x1[0][j]);
fscanf(fp,"%d,",&x1[0][j]);
printf("j:%d = %d \n",j,x1[0][j]);
}
*/
/*while (fscanf(fp,"%d , %d , %d",&x1[0][i],&x1[0][i+1],&x1[0][i+2]) == 3)
{
printf("%d %d %d\n",x1[0][i],x1[0][i+1],x1[0][i+2]);
i=i+3;
}*/
//printf("ans: %d %d %d\n",x1[0][0],x1[0][1],x1[0][2]);
//while(fscanf(fp,"%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf,%lf",&x[0][i],&x[0][i+1],&x[0][i+2],&x[0][i+3],&x[0][i+4],&x[0][i+5],&x[0][i+6],&x[0][i+7],&x[0][i+8],&x[0][i+9],&x[0][i+10],&x[0][i+11],&x[0][i+12],&x[0][i+13],&x[0][i+14],&x[0][i+15],&x[0][i+16],&x[0][i+17],&x[0][i+18],&x[0][i+19],&x[0][i+20],&x[0][i+21],&x[0][i+22],&x[0][i+23],&x[0][i+24],&x[0][i+25],&x[0][i+26],&x[0][i+27],&x[0][i+28],&x[0][i+29],&x[0][i+30],&x[0][i+31],&x[0][i+32],&x[0][i+33],&x[0][i+34],&x[0][i+35],&x[0][i+36],&x[0][i+37],&x[0][i+38],&x[0][i+39],&x[0][i+40],&x[0][i+41],&x[0][i+42],&x[0][i+43],&x[0][i+44],&x[0][i+45],&x[0][i+46],&x[0][i+47],&x[0][i+48],&x[0][i+49],&x[0][i+50],&x[0][i+51],&x[0][i+52],&x[0][i+53],&x[0][i+54],&x[0][i+55],&x[0][i+56],&x[0][i+57],&x[0][i+58],&x[0][i+59])==60)

//printf("ans x[0][0]: %lf",x[0][15118*60]);

/*while(fscanf(fp,"%lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf %lf",&x[0][i],&x[0][i+1],&x[0][i+2],&x[0][i+3],&x[0][i+4],&x[0][i+5],&x[0][i+6],&x[0][i+7],&x[0][i+8],&x[0][i+9],&x[0][i+10],&x[0][i+11],&x[0][i+12],&x[0][i+13],&x[0][i+14],&x[0][i+15],&x[0][i+16],&x[0][i+17],&x[0][i+18],&x[0][i+19],&x[0][i+20],&x[0][i+21],&x[0][i+22],&x[0][i+23],&x[0][i+24],&x[0][i+25],&x[0][i+26],&x[0][i+27],&x[0][i+28],&x[0][i+29],&x[0][i+30],&x[0][i+31],&x[0][i+32],&x[0][i+33],&x[0][i+34],&x[0][i+35],&x[0][i+36],&x[0][i+37],&x[0][i+38],&x[0][i+39],&x[0][i+40],&x[0][i+41],&x[0][i+42],&x[0][i+43],&x[0][i+44],&x[0][i+45],&x[0][i+46],&x[0][i+47],&x[0][i+48],&x[0][i+49],&x[0][i+50],&x[0][i+51],&x[0][i+52],&x[0][i+53],&x[0][i+54],&x[0][i+55],&x[0][i+56],&x[0][i+57],&x[0][i+58],&x[0][i+59])==60)	
{
//fscanf(fp,"%d , %d , %d",&a2[0],&a2[1],&a2[2]);
//printf("ans x[i]: %lf\n",x[0]);
printf("i = %d\n",i);
i=i+60;
}
printf("ans: %lf %lf %d\n",x[0][0],x[0][1],x[0][2]);
*/


/*fscanf(fp,"%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^,]",a1[0],a1[1],a1[2],a1[3],a1[4],a1[5],a1[6],a1[7],a1[8],a1[9],a1,a1[11],a1[12],a1[13],a1[14],a1[15],a1[16],a1[17],a1[18],a1[19],a1[20],a1[21],a1[22],a1[23],a1[24],a1[25],a1[26],a1[27],a1[28],a1[29],a1[30],a1[31],a1[32],a1[33],a1[34],a1[35],a1[36],a1[37],a1[38],a1[39],a1[40],a1[41],a1[42],a1[43],a1[44],a1[45],a1[46],a1[47],a1[48],a1[49],a1[50],a1[51],a1[52],a1[53],a1[54],a1[55],a1[56],a1[57],a1[58],a1[59],a1[60]);
//fscanf(fp,"%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s%*c%s",a1[0],a1[1],a1[2],a1[3],a1[4],a1[5],a1[6],a1[7],a1[8],a1[9],a1,a1[11],a1[12],a1[13],a1[14],a1[15],a1[16],a1[17],a1[18],a1[19],a1[20],a1[21],a1[22],a1[23],a1[24],a1[25],a1[26],a1[27],a1[28],a1[29],a1[30],a1[31],a1[32],a1[33],a1[34],a1[35],a1[36],a1[37],a1[38],a1[39],a1[40],a1[41],a1[42],a1[43],a1[44],a1[45],a1[46],a1[47],a1[48],a1[49],a1[50],a1[51],a1[52],a1[53],a1[54],a1[55],a1[56],a1[57],a1[58],a1[59],a1[60]);
*/
//printf("a1[59]: %s\n",a1[59]);
//fscanf(fp,"%lf",&temp);
//printf("temp: %lf\n",temp);
/*
int num_row = 15119,num_col=60;
int *matrix[5];
matrix[0] = (int*)calloc(num_row*num_col,sizeof(int));
while((ch = fgetc(fp)) != EOF)
{

}
*/
